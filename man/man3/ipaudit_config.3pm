.\" Automatically generated by Pod::Man v1.34, Pod::Parser v1.13
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "ipaudit_config 3"
.TH ipaudit_config 3 "2003-10-06" "perl v5.8.0" "User Contributed Perl Documentation"
.SH "NAME"
\&\fBipaudit_config.pm\fR v0.04
.PP
Reads configuration info needed by Ipaudit CGI and other scripts. 
This module also performs some other sundry duties, such as variable scrubbing.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&        #!/usr/bin/perl
.Ve
.PP
.Vb 3
\&        BEGIN {
\&          unshift (@INC,"/path/to/ipaudit_config.pm/directory/");
\&        }
.Ve
.PP
.Vb 1
\&        # note CAPITAL {VARS} below
.Ve
.PP
\&\fB0.03 method:\fR (still valid)
.PP
.Vb 3
\&        use ipaudit_config;
\&        %conf = ipa_getconf; # assign vars
\&        $zgrep = $conf{'ZGREP'} || do_something_special;
.Ve
.PP
\&\fB0.04 method:\fR
.PP
.Vb 5
\&        use ipaudit_config; # import all our variables from the conf
\&        use ipaudit_config(ipa_scrub) # I want our scrubber, too
\&        %conf = ipa_getconf; # assign vars
\&        # Be sure zgrep is in the form of /<path>/<binary>
\&        $zgrep = ipa_scrub("dir","$conf{'ZGREP'}"); || do_something_special;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Using \fBuse \f(BIipaudit_config()\fB\fR will import \s-1ONLY\s0 the variables parsed from \fBipaudit\-web.conf\fR.
Everything else must be explicitly imported.
.Sh "\s-1EXPORT\s0"
.IX Subsection "EXPORT"
\&\fBipa_getconf\fR	Returns a hash of variables. Takes no arguments.
.PP
\&\fBipa_scrub\fR("\fItype\fR\*(L",\*(R"\fIinput\fR")	Scrubs variables. \fIipa_scrub()\fR currently has four default scrubbing \fItype\fR profiles:
.PP
\&\fB	dir\fR		directory scrub: [\e/\ew\-]+
.PP
\&\fB	ip\fR		ip address scrub: [\ed]{1,3}\e.[\ed]{1,3}\e.[\ed]{1,3}\e.[\ed]{1,3}
.PP
\&\fB	word\fR		word scrub: [A\-Za\-z_\-]+ 
.PP
\&\fB	digit\fR	digit scrub: [\ed]+
.PP
If \fItype\fR is not one of the above, \fIipa_scrub()\fR will use \fItype\fR as a user-defined regex and check \fIinput\fR against that regex. All regexs are anchored with ^ and $.
.PP
\&\fB$ipaudit_config::IPAUDITCONF\fR	Location of the config file.
.SH "DEBUGING"
.IX Header "DEBUGING"
\&\fIipaudit_config()\fR has a debug mode that can be enabled inside a \s-1PERL\s0 script with:
.PP
\&\fB$ipaudit_config::DEBUG = 1;\fR
.PP
admittedly, there really isn't much to see with this option however.
.SH "BUGS"
.IX Header "BUGS"
Probably. Regexs might could also be more strict, but I think it should be fine as is. This module will probably need to be renamed soon as well \- it has outgrown its original purpose.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIipaudit\fR\|(1), \fIipstrings\fR\|(1), \fItotal\fR\|(1)
.SH "CHANGELOG"
.IX Header "CHANGELOG"
v0.01, 01/19/02:
  \- Initial module
.PP
v0.02, 01/31/02:
  \- Rewrote parsing engine to appropriately handle
    variables that include spaces.
  \- Variable normalizing.
  \- Updated \s-1SYNOPSIS\s0.
.PP
v0.03, 02/04/02:
  \- Overlooked the \*(L"use 5.006\*(R" \- Such a new version isn't
    really needed, so it was changed to 5.004.
  \- Moved \*(L"our\*(R" stuff into \*(L"use vars.\*(R" Not really needed,
    and enables this to be used on older versions of perl.
.PP
v0.04, 10/06/03:
  \- Trying to consolidate reusable code \- module now does
    variable scrubbing, and whatever else we deem reusable.
  \- Debugging code was added for whatever reason you can
    come up with \- bonus points for something creative.
  \- Some code reorganization.
.SH "AUTHOR"
.IX Header "AUTHOR"
jh <jh@dok.org> Use and redistribution allowed at user's own
risk.
